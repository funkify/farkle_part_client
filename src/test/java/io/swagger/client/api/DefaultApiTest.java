/*
 * API Farkle
 * API pour g√©rer un jeu de farkle.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.model.RestDices;
import io.swagger.client.model.RestPlayer;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * 
     *
     * bank the current player
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void bankTest() throws Exception {
        String response = api.bank();

        // TODO: test validations
    }
    /**
     * 
     *
     * return the total of all selected dices in this turn
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getActualTurnPointsTest() throws Exception {
        Integer response = api.getActualTurnPoints();

        // TODO: test validations
    }
    /**
     * 
     *
     * return the current Player if game started, -1 if game not yet started
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getCurrentPlayerIDTest() throws Exception {
        Integer response = api.getCurrentPlayerID();

        // TODO: test validations
    }
    /**
     * 
     *
     * return the arrays of Dices on the Plate
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getDicesPlatesTest() throws Exception {
        RestDices response = api.getDicesPlates();

        // TODO: test validations
    }
    /**
     * 
     *
     * return the asked Player
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getPlayerTest() throws Exception {
        Integer id = 0;
        RestPlayer response = api.getPlayer(id);

        // TODO: test validations
    }
    /**
     * 
     *
     * return the arrays of Selected Dices
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getSelectedDicesTest() throws Exception {
        RestDices response = api.getSelectedDices();

        // TODO: test validations
    }
    /**
     * 
     *
     * return 0 if nothing change, 1 if something append
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getStateTest() throws Exception {
        Integer response = api.getState();

        // TODO: test validations
    }
    /**
     * 
     *
     * return the winning Player or error if game not yet finished
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getWinnerTest() throws Exception {
        RestPlayer response = api.getWinner();

        // TODO: test validations
    }
    /**
     * 
     *
     * log a player with a given name ; return the logged player if successfull. If more than two players return an error
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void nameTest() throws Exception {
        String name = "Sepi";
        RestPlayer response = api.name(name);

        // TODO: test validations
    }
    /**
     * 
     *
     * logout a player and terminate the actual play
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void quitTest() throws Exception {
        Integer playerId = null;
        String response = api.quit(playerId);

        // TODO: test validations
    }
    /**
     * 
     *
     * roll the dices on the plate
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void rollTest() throws Exception {
        String response = api.roll();

        // TODO: test validations
    }
    /**
     * 
     *
     * select the given dices (e.g. 5 1 1)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void selectTest() throws Exception {
        String dices = null;
        String response = api.select(dices);

        // TODO: test validations
    }
}
